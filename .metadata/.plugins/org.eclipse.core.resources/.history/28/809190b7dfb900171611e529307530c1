// Agent diabetes_diagnosis_vote_judge in project diabetes_mas

/* Initial beliefs and rules */
number_of_voters(0).

/* Initial goals */
!start_diabetes_session_org("diabetes_session_id").
/* Plans */
+!start_diabetes_session_org(SessionId) <-
// creates a scheme to coordinate the diagnosis session
 .concat("sch_",SessionId,SchName);
 makeArtifact(SchName,
"ora4mas.nopl.SchemeBoard",["src/org/diabetes_diagnosis_team.xml",diagnosis_s
ession_scheme],SchArtId);
 debug(inspector_gui(on))[artifact_id(SchArtId)];
 .my_name(Me); setOwner(Me)[artifact_id(SchArtId)]; // I am the owner
of this scheme!
 focus(SchArtId);
 addScheme(SchName); // set the group as responsible for the scheme

commitMission(diagnosis_session_manager_mission)[artifact_id(SchArtId)].
+!create_diagnosis_depository <-
makeArtifact(diagnosis_result_depository,
"diabetes_mas.DiagnosisResultDepository", [], ArtId);
focus(ArtId).
+!create_measure_communication_medium : true <-
makeArtifact(measure_comm_medium,"diabetes_mas.MeasuresCommunicationMe
dium",[],MediumId)
?tuple_reader_agent(TupleReaderAgent)
.send(TupleReaderAgent,achieve,focus(measure_comm_medium)).

+!start_patient_dataset_reader: tuple_reader_agent(TupleReaderAgent) <-
.send(TupleReaderAgent,achieve,start_patient_data_reader).
+!read_next_patient_dataset_tuple: tuple_reader_agent(TupleReaderAgent) <-
.send(TupleReaderAgent,achieve,read_next_patient_data_tuple).

+no_tuples_to_read <-
.println("Votation session ended").



{ include("$jacamoJar/templates/common-cartago.asl") }
{ include("$jacamoJar/templates/common-moise.asl") }

// uncomment the include below to have a agent that always complies with its organization  
{ include("$jacamoJar/templates/org-obedient.asl") }
